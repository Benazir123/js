{"remainingRequest":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/babel-loader/lib/index.js!/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/ts-loader/index.js??ref--13-2!/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/src/service/ServiceLogin/ServiceLoginRes.ts","dependencies":[{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/src/service/ServiceLogin/ServiceLoginRes.ts","mtime":1646211034296},{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGRiIGZyb20gJ0AvZ2xvYmFsRnVuY3Rpb25zL0ZpcmViYXNlQ29uZmlnJzsKaW1wb3J0IEhlbHBlciBmcm9tICdAL2dsb2JhbEZ1bmN0aW9ucy9IZWxwZXInOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7IC8vIHN0b3JlCgpjbGFzcyBTZXJ2aWNlTG9naW5SZXMgewogIGFzeW5jIExvZ2luUmVzKGRhdGEpIHsKICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgY29uc3QgcmVzcG9uc2UgPSB7fTsKCiAgICBpZiAoZGF0YS5hcGlTdGF0dXMgPT09IHRydWUgJiYgZGF0YS5hZG1pbnN0YXR1cyAhPT0gJycpIHsKICAgICAgc3RvcmUuY29tbWl0KCdMb2dpblVzZXInLCBkYXRhLnRva2VuKTsKICAgICAgcmVzcG9uc2Uuc3RhdHVzID0gdHJ1ZTsKICAgICAgSGVscGVyLmxvZ2luUmVzcG9uc2UoZGF0YSk7CgogICAgICBpZiAoZGF0YSAmJiBkYXRhLmZpcmViYXNlKSB7CiAgICAgICAgSGVscGVyLmZpcmViYXNlUmVzcG9uc2UoZGF0YS5maXJlYmFzZSk7CiAgICAgIH0KCiAgICAgIHJlc3BvbnNlLm1zZyA9ICdMb2dpbiBTdWNjZXNzZnVsbHksIHlvdSBhcmUgcmVkaXJlY3RpbmchISc7CiAgICAgIGRiLmNvbm5lY3RGaXJlYmFzZTsKICAgIH0gZWxzZSB7CiAgICAgIHJlc3BvbnNlLnN0YXR1cyA9IGZhbHNlOwogICAgICByZXNwb25zZS5tc2cgPSBkYXRhLmVycm9yLm1lc3NhZ2U7CiAgICB9CgogICAgcmV0dXJuIHJlc3BvbnNlOwogIH0KCiAgYXN5bmMgQ29tcGFueVJlcyhkYXRhKSB7CiAgICBjb25zdCByZXNwb25zZSA9IHt9OwoKICAgIGlmIChkYXRhLmFwaVN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICByZXNwb25zZS5zdGF0dXMgPSB0cnVlOwogICAgICBjb25zdCByZXN1bHQgPSBkYXRhLnJlc3VsdDsKICAgICAgcmVzcG9uc2UuY29tcGFueV9uYW1lID0gcmVzdWx0LmNvbXBhbnlfbmFtZTsKICAgICAgcmVzcG9uc2UuY29tcGFueV9sb2dvID0gcmVzdWx0LmNvbXBhbnlfbG9nb19uYW1lOwogICAgICByZXNwb25zZS5zbWFsbF9sb2dvID0gcmVzdWx0LnNtYWxsX2xvZ287CiAgICAgIHJlc3BvbnNlLmlzX2NhbmNlbF93aXRoX3JlYXNvbiA9IHJlc3VsdC5pc19jYW5jZWxfd2l0aF9yZWFzb247CiAgICAgIEhlbHBlci5zZXRDb21wYW55RGF0YShyZXNwb25zZSk7CiAgICAgIHJlc3BvbnNlLmlzX3N1Y2Nlc3MgPSB0cnVlOwogICAgfSBlbHNlIHsKICAgICAgcmVzcG9uc2Uuc3RhdHVzID0gZmFsc2U7CiAgICB9CgogICAgcmV0dXJuIHJlc3BvbnNlOwogIH0KCiAgYXN5bmMgcmVzZXRQYXNzd29yZFJlcyhkYXRhKSB7CiAgICBjb25zdCByZXNwb25zZSA9IHt9OwoKICAgIGlmIChkYXRhLmFwaVN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICByZXNwb25zZS5zdGF0dXMgPSB0cnVlOwogICAgICByZXNwb25zZS5tZXNzYWdlID0gZGF0YS5tZXNzYWdlOwogICAgICByZXNwb25zZS5pc19zdWNjZXNzID0gdHJ1ZTsKICAgIH0gZWxzZSB7CiAgICAgIHJlc3BvbnNlLnN0YXR1cyA9IGZhbHNlOwogICAgICByZXNwb25zZS5pc19zdWNjZXNzID0gZmFsc2U7CiAgICAgIHJlc3BvbnNlLm1lc3NhZ2UgPSBkYXRhLmVycm9yLm1lc3NhZ2U7CiAgICB9CgogICAgcmV0dXJuIHJlc3BvbnNlOwogIH0KCn0KCmV4cG9ydCBkZWZhdWx0IG5ldyBTZXJ2aWNlTG9naW5SZXMoKTs="},{"version":3,"sources":["/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/src/service/ServiceLogin/ServiceLoginRes.ts"],"names":[],"mappings":"AAAA,OAAO,EAAP,MAAe,kCAAf;AACA,OAAO,MAAP,MAAmB,0BAAnB;AACA,OAAO,KAAP,MAAkB,SAAlB,C,CAA6B;;AAE7B,MAAM,eAAN,CAAqB;AACL,QAAR,QAAQ,CAAC,IAAD,EAAU;AACtB,IAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,UAAM,QAAQ,GAAG,EAAjB;;AACA,QAAI,IAAI,CAAC,SAAL,KAAmB,IAAnB,IAA2B,IAAI,CAAC,WAAL,KAAqB,EAApD,EAAwD;AACtD,MAAA,KAAK,CAAC,MAAN,CAAa,WAAb,EAA0B,IAAI,CAAC,KAA/B;AACA,MAAA,QAAQ,CAAC,MAAT,GAAkB,IAAlB;AACA,MAAA,MAAM,CAAC,aAAP,CAAqB,IAArB;;AACA,UAAI,IAAI,IAAI,IAAI,CAAC,QAAjB,EAA2B;AACzB,QAAA,MAAM,CAAC,gBAAP,CAAwB,IAAI,CAAC,QAA7B;AACD;;AACD,MAAA,QAAQ,CAAC,GAAT,GAAe,2CAAf;AACA,MAAA,EAAE,CAAC,eAAH;AACD,KATD,MASO;AACL,MAAA,QAAQ,CAAC,MAAT,GAAkB,KAAlB;AACA,MAAA,QAAQ,CAAC,GAAT,GAAe,IAAI,CAAC,KAAL,CAAW,OAA1B;AACD;;AACD,WAAO,QAAP;AACD;;AAEe,QAAV,UAAU,CAAC,IAAD,EAAU;AACxB,UAAM,QAAQ,GAAG,EAAjB;;AACA,QAAI,IAAI,CAAC,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,MAAA,QAAQ,CAAC,MAAT,GAAkB,IAAlB;AACA,YAAM,MAAM,GAAG,IAAI,CAAC,MAApB;AACA,MAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,YAA/B;AACA,MAAA,QAAQ,CAAC,YAAT,GAAwB,MAAM,CAAC,iBAA/B;AACA,MAAA,QAAQ,CAAC,UAAT,GAAsB,MAAM,CAAC,UAA7B;AACA,MAAA,QAAQ,CAAC,qBAAT,GAAiC,MAAM,CAAC,qBAAxC;AAEA,MAAA,MAAM,CAAC,cAAP,CAAsB,QAAtB;AACA,MAAA,QAAQ,CAAC,UAAT,GAAsB,IAAtB;AACD,KAVD,MAUO;AACL,MAAA,QAAQ,CAAC,MAAT,GAAkB,KAAlB;AACD;;AACD,WAAO,QAAP;AACD;;AAEqB,QAAhB,gBAAgB,CAAC,IAAD,EAAU;AAC9B,UAAM,QAAQ,GAAG,EAAjB;;AACA,QAAI,IAAI,CAAC,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,MAAA,QAAQ,CAAC,MAAT,GAAkB,IAAlB;AACA,MAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,OAAxB;AACA,MAAA,QAAQ,CAAC,UAAT,GAAsB,IAAtB;AACD,KAJD,MAIO;AACL,MAAA,QAAQ,CAAC,MAAT,GAAkB,KAAlB;AACA,MAAA,QAAQ,CAAC,UAAT,GAAsB,KAAtB;AACA,MAAA,QAAQ,CAAC,OAAT,GAAmB,IAAI,CAAC,KAAL,CAAW,OAA9B;AACD;;AACD,WAAO,QAAP;AACD;;AAlDkB;;AAoDrB,eAAe,IAAI,eAAJ,EAAf","sourcesContent":["import db from '@/globalFunctions/FirebaseConfig';\nimport Helper from '@/globalFunctions/Helper';\nimport store from '@/store'; // store\n\nclass ServiceLoginRes {\n  async LoginRes(data: any) {\n    console.log(data);\n    const response = {} as any;\n    if (data.apiStatus === true && data.adminstatus !== '') {\n      store.commit('LoginUser', data.token);\n      response.status = true;\n      Helper.loginResponse(data);\n      if (data && data.firebase) {\n        Helper.firebaseResponse(data.firebase);\n      }\n      response.msg = 'Login Successfully, you are redirecting!!';\n      db.connectFirebase;\n    } else {\n      response.status = false;\n      response.msg = data.error.message;\n    }\n    return response;\n  }\n\n  async CompanyRes(data: any) {\n    const response = {} as any;\n    if (data.apiStatus === true) {\n      response.status = true;\n      const result = data.result;\n      response.company_name = result.company_name;\n      response.company_logo = result.company_logo_name;\n      response.small_logo = result.small_logo;\n      response.is_cancel_with_reason = result.is_cancel_with_reason;\n\n      Helper.setCompanyData(response);\n      response.is_success = true;\n    } else {\n      response.status = false;\n    }\n    return response;\n  }\n\n  async resetPasswordRes(data: any) {\n    const response = {} as any;\n    if (data.apiStatus === true) {\n      response.status = true;\n      response.message = data.message;\n      response.is_success = true;\n    } else {\n      response.status = false;\n      response.is_success = false;\n      response.message = data.error.message;\n    }\n    return response;\n  }\n}\nexport default new ServiceLoginRes();\n"],"sourceRoot":""}]}