{"remainingRequest":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/babel-loader/lib/index.js!/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/src/components/Pages/KOLManagement/SpeakerConsultant/Utilization/UtilizationData.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/src/components/Pages/KOLManagement/SpeakerConsultant/Utilization/UtilizationData.vue","mtime":1646211034288},{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQXN5bmNDb21wb25lbnQsIGRlZmluZUNvbXBvbmVudCwgcmVmIH0gZnJvbSAndnVlJzsKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnVXRpbGl6YXRpb25EYXRhJywKICBwcm9wczogewogICAgcm93RGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0sCiAgICBkZWZhdWx0T3JkZXI6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBpc0tleUVkaXRhYmxlOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiAoKSA9PiB7fQogICAgfSwKICAgIGtleXNUb0NhbGN1bGF0ZTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIG9uT3BlbjogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogKCkgPT4ge30KICAgIH0sCiAgICBvblRvZ2dsZTogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogKCkgPT4ge30KICAgIH0sCiAgICBkZWxldGVOb2RlOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiAoKSA9PiB7fQogICAgfSwKICAgIGFkZE5vZGU6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9CiAgICB9LAogICAgY29sdW1uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNPcGVuOiBmYWxzZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBvcmRlcjogZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gdGhpcy5kZWZhdWx0T3JkZXIuc2xpY2UoMSwgOSk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJ3Jvd0RhdGEuY2hpbGRyZW4nOiB7CiAgICAgIGRlZXA6IHRydWUsCgogICAgICBoYW5kbGVyKCkgewogICAgICAgIHRoaXMuY2FsY3VsYXRlVmFsdWVzRnJvbUNoaWxkcmVuKCk7CiAgICAgIH0KCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjYWxjdWxhdGVWYWx1ZXNGcm9tQ2hpbGRyZW4oKSB7CiAgICAgIHRoaXMua2V5c1RvQ2FsY3VsYXRlLmZvckVhY2goa2V5ID0+IHsKICAgICAgICB0aGlzLnJvd0RhdGFba2V5XSA9IHRoaXMucm93RGF0YS5jaGlsZHJlbi5yZWR1Y2UoKGFjYywgY2hpbGQpID0+IGFjYyArIGNoaWxkW2tleV0sIDApOwogICAgICB9KTsKICAgIH0sCgogICAgYWRkTm9kZUFuZE9wZW4oKSB7CiAgICAgIHRoaXMuYWRkTm9kZSh0aGlzLnJvd0RhdGEuY2hpbGRyZW4pOwogICAgICB0aGlzLm9wZW4oKTsKICAgIH0sCgogICAgb3BlbigpIHsKICAgICAgdGhpcy5pc09wZW4gPSB0cnVlOwogICAgICB0aGlzLm9uT3BlbigpOwogICAgfSwKCiAgICB0b2dnbGUoKSB7CiAgICAgIHRoaXMuaXNPcGVuID0gIXRoaXMuaXNPcGVuOwogICAgICB0aGlzLm9uVG9nZ2xlKCk7CiAgICB9LAoKICAgIGdldFdpZHRoKGNvbHVtbklkKSB7Ly9yZXR1cm4gdGhpcy5jb2x1bW5zLmZpbmQoKGNvbCkgPT4gY29sLmlkID09IGNvbHVtbklkICkud2lkdGgKICAgICAgLy9yZXR1cm4gMTA7CiAgICB9CgogIH0KfSk7"},{"version":3,"sources":["/home/novastrid/Documents/gitProjects/js/CAdmin project/rd-client-admin1/rd-client-admin1/src/components/Pages/KOLManagement/SpeakerConsultant/Utilization/UtilizationData.vue"],"names":[],"mappings":"AAqBA,SAAS,oBAAT,EAA+B,eAA/B,EAAgD,GAAhD,QAA2D,KAA3D;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,IAAI,EAAE,iBADuB;AAE7B,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,MADC;AAEP,MAAA,OAAO,EAAE,MAAM;AACb,eAAO,EAAP;AACD;AAJM,KADJ;AAOL,IAAA,YAAY,EAAE;AACZ,MAAA,IAAI,EAAE,KADM;AAEZ,MAAA,OAAO,EAAE,MAAM;AACb,eAAO,EAAP;AACD;AAJW,KAPT;AAaL,IAAA,aAAa,EAAE;AACb,MAAA,IAAI,EAAE,QADO;AAEb,MAAA,OAAO,EAAE,MAAM,CAAE;AAFJ,KAbV;AAiBL,IAAA,eAAe,EAAE;AACf,MAAA,IAAI,EAAE,KADS;AAEf,MAAA,OAAO,EAAE,MAAM;AACb,eAAO,EAAP;AACD;AAJc,KAjBZ;AAuBL,IAAA,MAAM,EAAE;AACN,MAAA,IAAI,EAAE,QADA;AAEN,MAAA,OAAO,EAAE,MAAM,CAAE;AAFX,KAvBH;AA2BL,IAAA,QAAQ,EAAE;AACR,MAAA,IAAI,EAAE,QADE;AAER,MAAA,OAAO,EAAE,MAAM,CAAE;AAFT,KA3BL;AA+BL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,QADI;AAEV,MAAA,OAAO,EAAE,MAAM,CAAE;AAFP,KA/BP;AAmCL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,QADC;AAEP,MAAA,OAAO,EAAE,MAAM,CAAE;AAFV,KAnCJ;AAuCL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,KADC;AAEP,MAAA,OAAO,EAAE,MAAM;AACb,eAAO,EAAP;AACD;AAJM;AAvCJ,GAFsB;AAgD7B,EAAA,IAAI,EAAE,YAAW;AACf,WAAO;AACL,MAAA,MAAM,EAAE;AADH,KAAP;AAGD,GApD4B;AAqD7B,EAAA,QAAQ,EAAE;AACR,IAAA,KAAK,EAAE,YAAW;AAChB,aAAO,KAAK,YAAL,CAAkB,KAAlB,CAAwB,CAAxB,EAA2B,CAA3B,CAAP;AACD;AAHO,GArDmB;AA0D7B,EAAA,KAAK,EAAE;AACL,wBAAoB;AAClB,MAAA,IAAI,EAAE,IADY;;AAElB,MAAA,OAAO,GAAG;AACR,aAAK,2BAAL;AACD;;AAJiB;AADf,GA1DsB;AAkE7B,EAAA,OAAO,EAAE;AACP,IAAA,2BAA2B,GAAG;AAC5B,WAAK,eAAL,CAAqB,OAArB,CAA6B,GAAE,IAAK;AAClC,aAAK,OAAL,CAAa,GAAb,IAAoB,KAAK,OAAL,CAAa,QAAb,CAAsB,MAAtB,CAA6B,CAAC,GAAD,EAAM,KAAN,KAAgB,GAAE,GAAI,KAAK,CAAC,GAAD,CAAxD,EAA+D,CAA/D,CAApB;AACD,OAFD;AAGD,KALM;;AAMP,IAAA,cAAc,GAAG;AACf,WAAK,OAAL,CAAa,KAAK,OAAL,CAAa,QAA1B;AACA,WAAK,IAAL;AACD,KATM;;AAUP,IAAA,IAAI,GAAG;AACL,WAAK,MAAL,GAAc,IAAd;AACA,WAAK,MAAL;AACD,KAbM;;AAcP,IAAA,MAAM,GAAG;AACP,WAAK,MAAL,GAAc,CAAC,KAAK,MAApB;AACA,WAAK,QAAL;AACD,KAjBM;;AAkBP,IAAA,QAAQ,CAAC,QAAD,EAAW,CACjB;AACA;AACD;;AArBM;AAlEoB,CAAD,CAA9B","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"cell cursor-pointer\" :style=\"{ 'flex-grow': getWidth('open_button') }\" @click=\"toggle\">\n      <div v-if=\"!isOpen\" class=\"closed\">\n        <img src=\"@/assets/uticlose.svg\" />\n      </div>\n      <div v-if=\"isOpen\" class=\"open\">\n        <img src=\"@/assets/utiopen.svg\" />\n      </div>\n    </div>\n    <div v-for=\"key in order\" :key=\"key\" class=\"cell\" :style=\"{ 'flex-grow': getWidth(key) }\">\n      <div v-if=\"rowData[key] == 'Active'\" class=\"input\">button</div>\n      <div v-else>{{ rowData[key] }}</div>\n    </div>\n    <div class=\"cell\" :style=\"{ 'flex-grow': getWidth('actions') }\">\n      <div class=\"action green\" @click=\"addNodeAndOpen()\">✚</div>\n      <div class=\"action red\" @click=\"deleteNode(rowData.uuid)\">✖</div>\n    </div>\n  </div>\n</template>\n<script>\nimport { defineAsyncComponent, defineComponent, ref } from 'vue';\n\nexport default defineComponent({\n  name: 'UtilizationData',\n  props: {\n    rowData: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n    defaultOrder: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n    isKeyEditable: {\n      type: Function,\n      default: () => {},\n    },\n    keysToCalculate: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n    onOpen: {\n      type: Function,\n      default: () => {},\n    },\n    onToggle: {\n      type: Function,\n      default: () => {},\n    },\n    deleteNode: {\n      type: Function,\n      default: () => {},\n    },\n    addNode: {\n      type: Function,\n      default: () => {},\n    },\n    columns: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n  },\n  data: function() {\n    return {\n      isOpen: false,\n    };\n  },\n  computed: {\n    order: function() {\n      return this.defaultOrder.slice(1, 9);\n    },\n  },\n  watch: {\n    'rowData.children': {\n      deep: true,\n      handler() {\n        this.calculateValuesFromChildren();\n      },\n    },\n  },\n  methods: {\n    calculateValuesFromChildren() {\n      this.keysToCalculate.forEach(key => {\n        this.rowData[key] = this.rowData.children.reduce((acc, child) => acc + child[key], 0);\n      });\n    },\n    addNodeAndOpen() {\n      this.addNode(this.rowData.children);\n      this.open();\n    },\n    open() {\n      this.isOpen = true;\n      this.onOpen();\n    },\n    toggle() {\n      this.isOpen = !this.isOpen;\n      this.onToggle();\n    },\n    getWidth(columnId) {\n      //return this.columns.find((col) => col.id == columnId ).width\n      //return 10;\n    },\n  },\n});\n</script>\n<style scoped>\ninput {\n  border: none;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n}\n.open-button {\n  float: left;\n  display: inline;\n  margin-right: 10px;\n}\n.action {\n  display: inline-block;\n  margin: 0.125rem;\n}\n.red {\n  color: red;\n}\n.green {\n  color: green;\n}\n</style>\n"],"sourceRoot":""}]}